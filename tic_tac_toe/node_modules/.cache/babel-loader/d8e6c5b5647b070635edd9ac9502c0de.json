{"ast":null,"code":"var _jsxFileName = \"/Users/stuthi/Desktop/sample-app/src/page.js\";\nimport Header from './header';\nimport Content from './content';\nimport Footer from './footer';\nimport { get } from 'lodash';\n\nvar React = require('react');\n\nconst sybmol = {\n  'player_1': 'X',\n  'player_2': 'O'\n};\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTileClick = this.handleTileClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(() => {\n      return {\n        matrix: [[], [], []],\n        player: 'player_1',\n        start: false,\n        reset: false,\n        winnerFound: false\n      };\n    });\n  }\n\n  handleTileClick(row, col, player) {\n    this.setMatrix(row, col, player);\n    this.setState(() => {\n      return {\n        player: player === 'player_1' ? 'player_2' : 'player_1'\n      };\n    });\n  }\n\n  setMatrix(row, col, player) {\n    let matrix = get(this.state, 'matrix', [[], [], []]);\n\n    if (!matrix[row][col]) {\n      matrix[row][col] = sybmol[player];\n    } else {\n      console.log('Click an empty box!');\n    }\n\n    this.setState(() => {\n      return {\n        matrix\n      };\n    }, this.checkForWinner(matrix, row, col, player));\n  }\n\n  checkForWinner(matrix, row, col, player) {\n    let winnerFound = get(this.state, 'winnerFound', false);\n\n    if (this.checkHorizontal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if (this.checkVertical(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if (this.checkDiagonal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else {\n      console.log('continue playing!');\n    }\n\n    this.setState(() => {\n      return {\n        winnerFound: winnerFound\n      };\n    });\n  }\n\n  checkHorizontal(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n\n    if (col === 0) {\n      matched = currentVal === matrix[row][col + 1] && currentVal === matrix[row][col + 2];\n    } else if (col === 1) {\n      matched = currentVal === matrix[row][col - 1] && currentVal === matrix[row][col + 1];\n    } else {\n      matched = currentVal === matrix[row][col - 1] && currentVal === matrix[row][col - 2];\n    }\n\n    return matched;\n  }\n\n  checkVertical(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n\n    if (row === 0) {\n      matched = currentVal === matrix[row + 1][col] && currentVal === matrix[row + 2][col];\n    } else if (row === 1) {\n      matched = currentVal === matrix[row - 1][col] && currentVal === matrix[row + 1][col];\n    } else {\n      matched = currentVal === matrix[row - 1][col] && currentVal === matrix[row - 2][col];\n    }\n\n    return matched;\n  }\n\n  checkDiagonal(matrix, row, col) {\n    let matched = false;\n\n    if (!matrix[1][1]) {\n      return matched;\n    } else {\n      const centerVal = matrix[1][1];\n      matched = centerVal === matrix[0][0] && centerVal === matrix[2][2] || centerVal === matrix[0][2] && centerVal === matrix[2][0];\n    }\n\n    return matched;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        'background': 'black',\n        'opacity': 0.8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Content, {\n      handleTileClick: this.handleTileClick,\n      matrixContent: get(this.state, 'matrix', [[], [], []]),\n      player: get(this.state, 'player', 'player_1'),\n      winnerFound: get(this.state, 'winnerFound', false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Page;","map":{"version":3,"sources":["/Users/stuthi/Desktop/sample-app/src/page.js"],"names":["Header","Content","Footer","get","React","require","sybmol","Page","Component","constructor","props","handleTileClick","bind","componentDidMount","setState","matrix","player","start","reset","winnerFound","row","col","setMatrix","state","console","log","checkForWinner","checkHorizontal","checkVertical","checkDiagonal","matched","currentVal","centerVal","render"],"mappings":"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","sourcesContent":["import Header from './header';\nimport Content from './content';\nimport Footer from './footer';\n\nimport { get } from 'lodash';\n\nvar React = require('react');\n\nconst sybmol = {\n  'player_1' : 'X',\n  'player_2' : 'O'\n};\n\nclass Page extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleTileClick = this.handleTileClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(() => {\n      return {\n        matrix: [[],[],[]],\n        player : 'player_1',\n        start: false,\n        reset: false,\n        winnerFound: false,\n      }\n    });\n  }\n\n  handleTileClick(row, col, player) {\n    this.setMatrix(row, col, player);\n    this.setState(() => {\n      return {\n        player: player === 'player_1' ? 'player_2' : 'player_1',\n      }\n    })\n  }\n\n  setMatrix(row, col, player) {\n    let matrix = get(this.state,'matrix', [[],[],[]]);\n    if(!matrix[row][col]) {\n      matrix[row][col] = sybmol[player];\n    } else {\n      console.log('Click an empty box!');\n    }\n    this.setState(() => {\n      return {\n        matrix,\n      }\n    }, this.checkForWinner(matrix, row, col, player));\n  }\n\n  checkForWinner(matrix, row, col, player) {\n    let winnerFound = get(this.state, 'winnerFound', false);\n    if(this.checkHorizontal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if(this.checkVertical(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if(this.checkDiagonal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else {\n      console.log('continue playing!');\n    }\n    this.setState(() => {\n      return {\n        winnerFound : winnerFound\n      }\n    })\n  }\n\n  checkHorizontal(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n    if(col === 0) {\n      matched = (currentVal === matrix[row][col+1]) && (currentVal === matrix[row][col+2]);\n    } else if(col === 1) {\n      matched = (currentVal === matrix[row][col-1]) && (currentVal === matrix[row][col+1]);\n    } else {\n      matched = (currentVal === matrix[row][col-1]) && (currentVal === matrix[row][col-2]);\n    }\n    return matched;\n  }\n\n  checkVertical(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n    if(row === 0) {\n      matched = (currentVal === matrix[row+1][col]) && (currentVal === matrix[row+2][col]);\n    } else if(row === 1) {\n      matched = (currentVal === matrix[row-1][col]) && (currentVal === matrix[row+1][col]);\n    } else {\n      matched = (currentVal === matrix[row-1][col]) && (currentVal === matrix[row-2][col]);\n    }\n    return matched;\n  }\n\n  checkDiagonal(matrix, row, col) {\n    let matched = false;\n    if(!matrix[1][1]) {\n      return matched;\n    } else {\n      const centerVal = matrix[1][1];\n      matched = ((centerVal === matrix[0][0]) &&\n                  (centerVal === matrix[2][2])) ||\n                ((centerVal === matrix[0][2]) &&\n                  (centerVal === matrix[2][0]));\n    }\n    return matched;\n  }\n\n  render() {\n    return(\n      <div style={{'background':'black', 'opacity':0.8}}>\n        <Header />\n        <Content\n           handleTileClick={this.handleTileClick}\n           matrixContent={get(this.state, 'matrix', [[],[],[]])}\n           player={get(this.state, 'player', 'player_1')}\n           winnerFound={get(this.state,'winnerFound',false)}\n         />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}