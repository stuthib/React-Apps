{"ast":null,"code":"import _slicedToArray from \"/Users/stuthi/Desktop/sample-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stuthi/Desktop/sample-app/src/page.js\";\nimport Header from './header';\nimport Content from './content';\nimport Footer from './footer';\nimport { get } from 'lodash';\nimport React, { useState, useEffect } from 'react';\nconst sybmol = {\n  'player_1': 'X',\n  'player_2': 'O'\n};\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTileClick = this.handleTileClick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(() => {\n      return {\n        matrix: [[], [], []],\n        player: 'player_1',\n        start: false,\n        reset: false,\n        winnerFound: false,\n        seconds: 5\n      };\n    });\n    this.startGame();\n  }\n\n  startGame() {\n    console.log('startGame---- ', this.state);\n    this.startTimer();\n  }\n\n  startTimer() {\n    const _useState = useState(5),\n          _useState2 = _slicedToArray(_useState, 2),\n          seconds = _useState2[0],\n          setSeconds = _useState2[1];\n\n    useEffect(() => {\n      const interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n        console.log(seconds);\n      }, 1000);\n      return () => clearInterval(interval);\n    }, []);\n  }\n\n  handleTileClick(row, col, player) {\n    this.setMatrix(row, col, player);\n    this.setState(() => {\n      return {\n        player: player === 'player_1' ? 'player_2' : 'player_1'\n      };\n    });\n  }\n\n  setMatrix(row, col, player) {\n    let matrix = get(this.state, 'matrix', [[], [], []]);\n\n    if (!matrix[row][col]) {\n      matrix[row][col] = sybmol[player];\n    } else {\n      console.log('Click an empty box!');\n    }\n\n    this.setState(() => {\n      return {\n        matrix\n      };\n    }, this.checkForWinner(matrix, row, col, player));\n  }\n\n  checkForWinner(matrix, row, col, player) {\n    let winnerFound = get(this.state, 'winnerFound', false);\n\n    if (this.checkHorizontal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if (this.checkVertical(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if (this.checkDiagonal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else {\n      console.log('continue playing!');\n    }\n\n    this.setState(() => {\n      return {\n        winnerFound: winnerFound\n      };\n    });\n  }\n\n  checkHorizontal(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n\n    if (col === 0) {\n      matched = currentVal === matrix[row][col + 1] && currentVal === matrix[row][col + 2];\n    } else if (col === 1) {\n      matched = currentVal === matrix[row][col - 1] && currentVal === matrix[row][col + 1];\n    } else {\n      matched = currentVal === matrix[row][col - 1] && currentVal === matrix[row][col - 2];\n    }\n\n    return matched;\n  }\n\n  checkVertical(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n\n    if (row === 0) {\n      matched = currentVal === matrix[row + 1][col] && currentVal === matrix[row + 2][col];\n    } else if (row === 1) {\n      matched = currentVal === matrix[row - 1][col] && currentVal === matrix[row + 1][col];\n    } else {\n      matched = currentVal === matrix[row - 1][col] && currentVal === matrix[row - 2][col];\n    }\n\n    return matched;\n  }\n\n  checkDiagonal(matrix, row, col) {\n    let matched = false;\n\n    if (!matrix[1][1]) {\n      return matched;\n    } else {\n      const centerVal = matrix[1][1];\n      matched = centerVal === matrix[0][0] && centerVal === matrix[2][2] || centerVal === matrix[0][2] && centerVal === matrix[2][0];\n    }\n\n    return matched;\n  }\n\n  render() {\n    console.log('render: ', this.state);\n    return React.createElement(\"div\", {\n      style: {\n        'background': 'black',\n        'opacity': 0.8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(Content, {\n      handleTileClick: this.handleTileClick,\n      matrixContent: get(this.state, 'matrix', [[], [], []]),\n      player: get(this.state, 'player', 'player_1'),\n      winnerFound: get(this.state, 'winnerFound', false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Page;","map":{"version":3,"sources":["/Users/stuthi/Desktop/sample-app/src/page.js"],"names":["Header","Content","Footer","get","React","useState","useEffect","sybmol","Page","Component","constructor","props","handleTileClick","bind","startTimer","componentDidMount","setState","matrix","player","start","reset","winnerFound","seconds","startGame","console","log","state","setSeconds","interval","setInterval","clearInterval","row","col","setMatrix","checkForWinner","checkHorizontal","checkVertical","checkDiagonal","matched","currentVal","centerVal","render"],"mappings":"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","sourcesContent":["import Header from './header';\nimport Content from './content';\nimport Footer from './footer';\n\nimport { get } from 'lodash';\nimport React, { useState, useEffect } from 'react';\n\nconst sybmol = {\n  'player_1' : 'X',\n  'player_2' : 'O'\n};\n\nclass Page extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleTileClick = this.handleTileClick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(() => {\n      return {\n        matrix: [[],[],[]],\n        player : 'player_1',\n        start: false,\n        reset: false,\n        winnerFound: false,\n        seconds: 5,\n      }\n    });\n    this.startGame();\n  }\n\n  startGame() {\n    console.log('startGame---- ', this.state);\n    this.startTimer();\n  }\n\n  startTimer() {\n    const [seconds, setSeconds] = useState(5);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(seconds => seconds - 1);\n      console.log(seconds);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  }\n\n  handleTileClick(row, col, player) {\n    this.setMatrix(row, col, player);\n    this.setState(() => {\n      return {\n        player: player === 'player_1' ? 'player_2' : 'player_1',\n      }\n    })\n  }\n\n  setMatrix(row, col, player) {\n    let matrix = get(this.state,'matrix', [[],[],[]]);\n    if(!matrix[row][col]) {\n      matrix[row][col] = sybmol[player];\n    } else {\n      console.log('Click an empty box!');\n    }\n    this.setState(() => {\n      return {\n        matrix,\n      }\n    }, this.checkForWinner(matrix, row, col, player));\n  }\n\n  checkForWinner(matrix, row, col, player) {\n    let winnerFound = get(this.state, 'winnerFound', false);\n    if(this.checkHorizontal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if(this.checkVertical(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if(this.checkDiagonal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else {\n      console.log('continue playing!');\n    }\n    this.setState(() => {\n      return {\n        winnerFound : winnerFound\n      }\n    })\n  }\n\n  checkHorizontal(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n    if(col === 0) {\n      matched = (currentVal === matrix[row][col+1]) && (currentVal === matrix[row][col+2]);\n    } else if(col === 1) {\n      matched = (currentVal === matrix[row][col-1]) && (currentVal === matrix[row][col+1]);\n    } else {\n      matched = (currentVal === matrix[row][col-1]) && (currentVal === matrix[row][col-2]);\n    }\n    return matched;\n  }\n\n  checkVertical(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n    if(row === 0) {\n      matched = (currentVal === matrix[row+1][col]) && (currentVal === matrix[row+2][col]);\n    } else if(row === 1) {\n      matched = (currentVal === matrix[row-1][col]) && (currentVal === matrix[row+1][col]);\n    } else {\n      matched = (currentVal === matrix[row-1][col]) && (currentVal === matrix[row-2][col]);\n    }\n    return matched;\n  }\n\n  checkDiagonal(matrix, row, col) {\n    let matched = false;\n    if(!matrix[1][1]) {\n      return matched;\n    } else {\n      const centerVal = matrix[1][1];\n      matched = ((centerVal === matrix[0][0]) &&\n                  (centerVal === matrix[2][2])) ||\n                ((centerVal === matrix[0][2]) &&\n                  (centerVal === matrix[2][0]));\n    }\n    return matched;\n  }\n\n  render() {\n    console.log('render: ', this.state);\n    return(\n      <div style={{'background':'black', 'opacity':0.8}}>\n        <Header />\n        <Content\n           handleTileClick={this.handleTileClick}\n           matrixContent={get(this.state, 'matrix', [[],[],[]])}\n           player={get(this.state, 'player', 'player_1')}\n           winnerFound={get(this.state,'winnerFound',false)}\n         />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}