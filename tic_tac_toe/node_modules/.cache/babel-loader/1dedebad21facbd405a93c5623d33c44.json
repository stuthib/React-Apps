{"ast":null,"code":"var _jsxFileName = \"/Users/stuthi/Desktop/sample-app/src/page.js\";\nimport Header from './header';\nimport Content from './content';\nimport Footer from './footer';\nimport { get } from 'lodash';\nimport React from 'react';\nconst sybmol = {\n  'player_1': 'X',\n  'player_2': 'O'\n};\nconst maxTime = 5;\nlet interval;\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTileClick = this.handleTileClick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(() => {\n      return {\n        matrix: [[], [], []],\n        player: 'player_1',\n        start: false,\n        reset: false,\n        winnerFound: false\n      };\n    });\n    this.startTimer(maxTime);\n  }\n\n  startTimer(maxTime) {\n    if (interval) {\n      clearInterval(interval);\n    }\n\n    interval = setInterval(() => {\n      if (maxTime === 0) {\n        clearInterval(interval);\n        this.setState({\n          gameOver: true\n        });\n      }\n\n      maxTime = maxTime - 1;\n      console.log('seconds ---- ', maxTime);\n      this.setState({\n        seconds: maxTime,\n        gameOver: false\n      }); // if(seconds > 0) {\n      //   seconds = seconds - 1;\n      //   console.log('seconds ---- ', seconds);\n      //   this.setState({\n      //     seconds: seconds,\n      //     gameOver: false\n      //   })\n      // } else {\n      //   clearInterval(interval);\n      //   this.setState({\n      //     gameOver: true,\n      //   })\n      // }\n    }, 1000);\n  }\n\n  handleTileClick(row, col, player) {\n    if (get(this.state, 'seconds', maxTime) === 0) {\n      return;\n    }\n\n    this.setMatrix(row, col, player);\n    this.setState(() => {\n      return {\n        player: player === 'player_1' ? 'player_2' : 'player_1' //seconds: maxTime,\n\n      };\n    });\n    this.startTimer(maxTime);\n  }\n\n  setMatrix(row, col, player) {\n    let matrix = get(this.state, 'matrix', [[], [], []]);\n\n    if (!matrix[row][col]) {\n      matrix[row][col] = sybmol[player];\n    } else {\n      console.log('Click an empty box!');\n    }\n\n    this.setState(() => {\n      return {\n        matrix\n      };\n    }, this.checkForWinner(matrix, row, col, player));\n  }\n\n  checkForWinner(matrix, row, col, player) {\n    let winnerFound = get(this.state, 'winnerFound', false);\n\n    if (this.checkHorizontal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if (this.checkVertical(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if (this.checkDiagonal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else {\n      console.log('continue playing!');\n    }\n\n    this.setState(() => {\n      return {\n        winnerFound: winnerFound\n      };\n    });\n  }\n\n  checkHorizontal(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n\n    if (col === 0) {\n      matched = currentVal === matrix[row][col + 1] && currentVal === matrix[row][col + 2];\n    } else if (col === 1) {\n      matched = currentVal === matrix[row][col - 1] && currentVal === matrix[row][col + 1];\n    } else {\n      matched = currentVal === matrix[row][col - 1] && currentVal === matrix[row][col - 2];\n    }\n\n    return matched;\n  }\n\n  checkVertical(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n\n    if (row === 0) {\n      matched = currentVal === matrix[row + 1][col] && currentVal === matrix[row + 2][col];\n    } else if (row === 1) {\n      matched = currentVal === matrix[row - 1][col] && currentVal === matrix[row + 1][col];\n    } else {\n      matched = currentVal === matrix[row - 1][col] && currentVal === matrix[row - 2][col];\n    }\n\n    return matched;\n  }\n\n  checkDiagonal(matrix, row, col) {\n    let matched = false;\n\n    if (!matrix[1][1]) {\n      return matched;\n    } else {\n      const centerVal = matrix[1][1];\n      matched = centerVal === matrix[0][0] && centerVal === matrix[2][2] || centerVal === matrix[0][2] && centerVal === matrix[2][0];\n    }\n\n    return matched;\n  }\n\n  render() {\n    //console.log('render: ', this.state);\n    return React.createElement(\"div\", {\n      style: {\n        'background': 'black',\n        'opacity': 0.8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Content, {\n      handleTileClick: this.handleTileClick,\n      matrixContent: get(this.state, 'matrix', [[], [], []]),\n      player: get(this.state, 'player', 'player_1'),\n      winnerFound: get(this.state, 'winnerFound', false),\n      secondsRemaining: get(this.state, 'seconds', maxTime),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Page;","map":{"version":3,"sources":["/Users/stuthi/Desktop/sample-app/src/page.js"],"names":["Header","Content","Footer","get","React","sybmol","maxTime","interval","Page","Component","constructor","props","handleTileClick","bind","startTimer","componentDidMount","setState","matrix","player","start","reset","winnerFound","clearInterval","setInterval","gameOver","console","log","seconds","row","col","state","setMatrix","checkForWinner","checkHorizontal","checkVertical","checkDiagonal","matched","currentVal","centerVal","render"],"mappings":"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","sourcesContent":["import Header from './header';\nimport Content from './content';\nimport Footer from './footer';\n\nimport { get } from 'lodash';\nimport React from 'react';\n\nconst sybmol = {\n  'player_1' : 'X',\n  'player_2' : 'O'\n};\n\nconst maxTime = 5;\nlet interval;\n\nclass Page extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.handleTileClick = this.handleTileClick.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState(() => {\n      return {\n        matrix: [[],[],[]],\n        player : 'player_1',\n        start: false,\n        reset: false,\n        winnerFound: false,\n      }\n    });\n    this.startTimer(maxTime);\n  }\n\n  startTimer(maxTime) {\n    if(interval) {\n      clearInterval(interval);\n    }\n    interval = setInterval(() => {\n      if(maxTime === 0) {\n        clearInterval(interval);\n        this.setState({\n          gameOver: true,\n        })\n      }\n      maxTime = maxTime - 1;\n      console.log('seconds ---- ', maxTime);\n      this.setState({\n        seconds: maxTime,\n        gameOver: false\n      })\n\n\n\n      // if(seconds > 0) {\n      //   seconds = seconds - 1;\n      //   console.log('seconds ---- ', seconds);\n      //   this.setState({\n      //     seconds: seconds,\n      //     gameOver: false\n      //   })\n      // } else {\n      //   clearInterval(interval);\n      //   this.setState({\n      //     gameOver: true,\n      //   })\n      // }\n    }, 1000);\n\n  }\n\n  handleTileClick(row, col, player) {\n    if(get(this.state,'seconds',maxTime) === 0) {\n      return;\n    }\n    this.setMatrix(row, col, player);\n    this.setState(() => {\n      return {\n        player: player === 'player_1' ? 'player_2' : 'player_1',\n        //seconds: maxTime,\n      }\n    })\n    this.startTimer(maxTime);\n  }\n\n  setMatrix(row, col, player) {\n    let matrix = get(this.state,'matrix', [[],[],[]]);\n    if(!matrix[row][col]) {\n      matrix[row][col] = sybmol[player];\n    } else {\n      console.log('Click an empty box!');\n    }\n    this.setState(() => {\n      return {\n        matrix,\n      }\n    }, this.checkForWinner(matrix, row, col, player));\n  }\n\n  checkForWinner(matrix, row, col, player) {\n    let winnerFound = get(this.state, 'winnerFound', false);\n    if(this.checkHorizontal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if(this.checkVertical(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else if(this.checkDiagonal(matrix, row, col)) {\n      winnerFound = !winnerFound;\n    } else {\n      console.log('continue playing!');\n    }\n    this.setState(() => {\n      return {\n        winnerFound : winnerFound\n      }\n    })\n  }\n\n  checkHorizontal(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n    if(col === 0) {\n      matched = (currentVal === matrix[row][col+1]) && (currentVal === matrix[row][col+2]);\n    } else if(col === 1) {\n      matched = (currentVal === matrix[row][col-1]) && (currentVal === matrix[row][col+1]);\n    } else {\n      matched = (currentVal === matrix[row][col-1]) && (currentVal === matrix[row][col-2]);\n    }\n    return matched;\n  }\n\n  checkVertical(matrix, row, col) {\n    let matched = false;\n    const currentVal = matrix[row][col];\n    if(row === 0) {\n      matched = (currentVal === matrix[row+1][col]) && (currentVal === matrix[row+2][col]);\n    } else if(row === 1) {\n      matched = (currentVal === matrix[row-1][col]) && (currentVal === matrix[row+1][col]);\n    } else {\n      matched = (currentVal === matrix[row-1][col]) && (currentVal === matrix[row-2][col]);\n    }\n    return matched;\n  }\n\n  checkDiagonal(matrix, row, col) {\n    let matched = false;\n    if(!matrix[1][1]) {\n      return matched;\n    } else {\n      const centerVal = matrix[1][1];\n      matched = ((centerVal === matrix[0][0]) &&\n                  (centerVal === matrix[2][2])) ||\n                ((centerVal === matrix[0][2]) &&\n                  (centerVal === matrix[2][0]));\n    }\n    return matched;\n  }\n\n  render() {\n    //console.log('render: ', this.state);\n    return(\n      <div style={{'background':'black', 'opacity':0.8}}>\n        <Header />\n        <Content\n           handleTileClick={this.handleTileClick}\n           matrixContent={get(this.state, 'matrix', [[],[],[]])}\n           player={get(this.state, 'player', 'player_1')}\n           winnerFound={get(this.state,'winnerFound',false)}\n           secondsRemaining={get(this.state,'seconds',maxTime)}\n         />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}